version: 2.1
executors:
  node-executor:
    working_directory: ~/phovea
    docker:
      - image: cimg/python:3.10.6-node
  cypress-executor:
    working_directory: ~/phovea
    docker:
      - image: cypress/base:16.18.0
        environment:
          ## this enables colors in the output
          TERM: xterm

orbs:
  aws-ecr: circleci/aws-ecr@8.1.2

jobs:
  build:
    executor: node-executor
    steps:
      - checkout
      - setup_remote_docker
      - aws-ecr/ecr-login
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "package.json" }}
      - run:
          name: install-npm-wee
          command: npm install
      - run:
          name: Show installed npm dependencies
          command: npm list --depth=1 || true
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "package.json" }}
          paths: ./node_modules
      - deploy:
          name: build and deploy
          command: |
            case "${CIRCLE_BRANCH}${CIRCLE_TAG}" in
            master)
              awsTag="latest"
              ;;
            *)
              awsTag="${CIRCLE_BRANCH//\//_}${CIRCLE_TAG}" # replace `/` with `_` in branch name
              ;;
            esac
            echo "using tag: --${awsTag}--"
            node build.js --injectVersion --skipSaveImage --skipTests --noDefaultTags --pushExtra=${awsTag} --pushTo=478950388974.dkr.ecr.eu-central-1.amazonaws.com/caleydo
      - store_artifacts:
          path: build
          destination: build
      - deploy:
          name: restart aws #assumes the task definition is called <reponame>-<branch>
          command: |
            # cleanup name by removing the _product suffix
            baseName=${CIRCLE_PROJECT_REPONAME%_product}
            awsFamily="${baseName}-${CIRCLE_BRANCH//\//_}" # replace `/` with `_` in branch name
            echo "awsFamily --${awsFamily}--"
            tasksExists=$(aws --output text ecs list-task-definitions --family-prefix ${awsFamily})
            echo "existsTaskDefinition? --${tasksExists}--"
            if [ ! -z "$tasksExists" ]; then
              isTaskRunning=$(aws --output text ecs list-tasks --cluster JKU_ASG_Cluster --family ${awsFamily})
              echo "isTaskRunning? --${isTaskRunning}--"
              if [ ! -z "$isTaskRunning" ]; then
                taskId=$(echo "${isTaskRunning}" | cut -f2)
                echo "taskId--${taskId}--"
                aws --output text ecs stop-task --cluster JKU_ASG_Cluster --task ${taskId}
              fi
              aws --output text ecs run-task --cluster JKU_ASG_Cluster --task-definition ${awsFamily} --started-by CircleCIAutoUpdate
            fi
  cypress: # the job is taken from https://docs.cypress.io/guides/guides/continuous-integration.html#Example-circleci-config-yml-v2-config-file
    executor: cypress-executor
    environment:
      CYPRESS_host: "https://ordino-daily.caleydoapp.org/"
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install git
          command: |
            apt-get update && apt-get install --no-install-recommends -y git openssh-server
      - run:
          name: Show git version
          command: |
            git --version
            which git
      - run:
          name: Which ssh
          command: |
            which ssh
      - run:
          name: Show Node.js and npm version
          command: |
            node -v
            npm -v
      - restore_cache:
          key: deps2-{{ .Branch }}-{{ checksum "package.json" }}
      - run:
          name: install-npm-wee
          command: npm install
      - run:
          name: Show installed npm dependencies
          command: npm list --depth=1 || true
      - save_cache:
          key: deps2-{{ .Branch }}-{{ checksum "package.json" }}
          paths: ./node_modules
      - deploy:
          name: build and deploy
          command: |
            node build.js --injectVersion --skipSaveImage --skipTests --noDefaultTags
      - run:
          name: Run cypress tests
          command: |
            cd ./frontend
            npm install
            npx cypress install
            node ./symlink_frontend_repos.js
            npm run cy:run:ordino_public
      - store_artifacts:
          path: ./frontend/cypress/screenshots
      - store_artifacts:
          path: ./frontend/cypress/videos
workflows:
  version: 2
  build-nightly:
    triggers:
      - schedule: # nightly build during weekday
          cron: "15 1 * * 1-5"
          filters:
            branches:
              only:
                - develop
    jobs:
      - build:
          context:
            - org-global      
  cypress-nightly:
    # triggers:
    #   - schedule: # nightly test during weekday (2 hours after build)
    #       cron: "15 3 * * 1-5"
    #       filters:
    #         branches:
    #           only:
    #             - develop
    jobs:
      - cypress
  # build-branch:
  #   jobs:
  #     - build:
  #         context:
  #           - org-global
  #         filters:
  #           tags:
  #             ignore: /^v.*/
  build-tag:
    jobs:
      - build:
          context:
            - org-global
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
